{
  "hash": "20d67eac2f4c118dfc7e8e2a62eec1fc",
  "result": {
    "markdown": "---\ntitle: \"blogpost5\"\ndescription:  |\n  This blog post will build on blogpost4 to merge the 3rd dataset by case\n  numbers\nauthor: \"team3\"\ndate: \"2024-04-10\"\ndate-modified: \"2024-04-10\"\ndraft: FALSE\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(readr)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ broom        1.0.5     ✔ rsample      1.2.0\n✔ dials        1.2.0     ✔ tibble       3.2.1\n✔ ggplot2      3.4.4     ✔ tidyr        1.3.0\n✔ infer        1.0.5     ✔ tune         1.1.2\n✔ modeldata    1.2.0     ✔ workflows    1.1.3\n✔ parsnip      1.1.1     ✔ workflowsets 1.0.1\n✔ purrr        1.0.2     ✔ yardstick    1.2.0\n✔ recipes      1.0.9     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ purrr::discard()  masks scales::discard()\n✖ dplyr::filter()   masks stats::filter()\n✖ dplyr::lag()      masks stats::lag()\n✖ yardstick::spec() masks readr::spec()\n✖ recipes::step()   masks stats::step()\n• Dig deeper into tidy modeling with R at https://www.tmwr.org\n```\n:::\n\n```{.r .cell-code}\nlibrary(cluster)\nlibrary(ggplot2)\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'lubridate'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- readRDS(\"dataset/cleaned_disclosure.rds\")\nhead(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 12\n  CASE_NUMBER     CASE_STATUS RECEIVED_DATE       DECISION_DATE       VISA_CLASS\n  <chr>           <chr>       <dttm>              <dttm>              <chr>     \n1 I-200-23355-58… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n2 I-203-23355-58… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 E-3 Austr…\n3 I-200-23355-58… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n4 I-200-23355-58… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n5 I-200-23355-58… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n6 I-200-23355-58… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n# ℹ 7 more variables: JOB_TITLE <chr>, FULL_TIME_POSITION <chr>,\n#   BEGIN_DATE <dttm>, END_DATE <dttm>, EMPLOYER_NAME <chr>,\n#   EMPLOYER_STATE <chr>, AGENT_REPRESENTING_EMPLOYER <chr>\n```\n:::\n:::\n\n# Combining Dataset\n\nWe selected this dataset, updated in 2024, because it comprehensively represents the evolution of U.S. immigration policy from the Trump to the Biden administration. It provides a wealth of columns suitable for statistical modeling. To enrich our analysis, we plan to merge it with two other datasets. The first includes information on the applicants' universities and majors, while the second contains data on their incomes, allowing us to construct a linear regression model. Once merged, we will have a dataframe with approximately 30+ columns.\n\nThis is the line of code of how to read xlsx files and convert into rds. We commented out after done\n\n::: {.cell}\n\n```{.r .cell-code}\n# rds for the other two projects\n# df2 <- read_excel(\"dataset/worksite.xlsx\")\n# saveRDS(df2, \"dataset/LCA_worksite.rds\")\n\n# df3 <- read_excel(\"dataset/appendix.xlsx\")\n# saveRDS(df3, \"dataset/LCA_appendix.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in df2\n\ndf2 <- readRDS(\"dataset/LCA_worksite.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# read in df3\n\ndf3 <- readRDS(\"dataset/appendix.rds\")\n```\n:::\n\n\n## Merging Process\nTo merge the dataset together, we can find matching case numbers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# merge df1 and df2 by case number\n# merge_1 <- merge(df, df2, by=\"CASE_NUMBER\", all = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# final_merge <- merge(merge_1, df3, by=\"CASE_NUMBER\", all = TRUE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# visualize our new dataset\n# final_merge\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# save as new rds for final_merge\n# saveRDS(final_merge, \"dataset/final_merge.rds\")\n```\n:::\n\n\n# Data Background\nThis is the dataset we are combining..\nHow are you combining them\n\n# Start HERE - Import Data\n\n::: {.cell}\n\n```{.r .cell-code}\n# just load in this dataset\nfinal_df <- readRDS(\"dataset/final_merge.rds\")\nhead(final_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         CASE_NUMBER           CASE_STATUS RECEIVED_DATE DECISION_DATE\n1 I-200-19297-106681 Certified - Withdrawn    2019-10-24    2023-11-01\n2 I-200-19319-148860 Certified - Withdrawn    2019-11-15    2023-10-20\n3 I-200-19319-148860 Certified - Withdrawn    2019-11-15    2023-10-20\n4 I-200-19319-148860 Certified - Withdrawn    2019-11-15    2023-10-20\n5 I-200-19319-149308 Certified - Withdrawn    2019-11-15    2023-10-05\n6 I-200-19323-154281 Certified - Withdrawn    2019-11-19    2023-10-02\n  VISA_CLASS                JOB_TITLE FULL_TIME_POSITION BEGIN_DATE   END_DATE\n1       H-1B     Research Scientist I                  Y 2019-10-24 2022-10-23\n2       H-1B       Software Developer                  Y 2019-12-01 2022-11-30\n3       H-1B       Software Developer                  Y 2019-12-01 2022-11-30\n4       H-1B       Software Developer                  Y 2019-12-01 2022-11-30\n5       H-1B       Software Developer                  Y 2019-11-18 2022-11-17\n6       H-1B SENIOR SOFTWARE ENGINEER                  Y 2020-05-16 2023-05-15\n                       EMPLOYER_NAME EMPLOYER_STATE AGENT_REPRESENTING_EMPLOYER\n1    Georgia Institute of Technology             GA                          No\n2                     TRISHULLA, LLC             WI                         Yes\n3                     TRISHULLA, LLC             WI                         Yes\n4                     TRISHULLA, LLC             WI                         Yes\n5 INTERNATIONAL SOFTWARE SYSTEMS INC             MD                          No\n6            UBER TECHNOLOGIES, INC.             CA                         Yes\n  WORKSITE_WORKERS SECONDARY_ENTITY SECONDARY_ENTITY_BUSINESS_NAME\n1                1                N                           <NA>\n2                1                Y           Acuity Eyecare Group\n3                1                N                           <NA>\n4                1                N                           <NA>\n5                1                N                           <NA>\n6                1                N                           <NA>\n                     WORKSITE_ADDRESS1 WORKSITE_ADDRESS2 WORKSITE_CITY\n1                      313 Ferst Drive              <NA>       Atlanta\n2 4835 Lyndon B Johnson Fwy, Suite 850              <NA>        Dallas\n3       6629 UNIVERSITY AVE, SUITE 210              <NA>     MIDDLETON\n4       8383 Greenway Blvd., Suite 600              <NA>     Middleton\n5                 7337 Hanover Parkway           Suite A     Greenbelt\n6                   1455 MARKET STREET         4TH FLOOR SAN FRANCISCO\n  WORKSITE_COUNTY WORKSITE_STATE WORKSITE_POSTAL_CODE WAGE_RATE_OF_PAY_FROM\n1          FULTON        GEORGIA                30332                 52100\n2          DALLAS          TEXAS                75244                 77605\n3            DANE      WISCONSIN                53562                 77605\n4            DANE      WISCONSIN                53562                 77605\n5 PRINCE GEORGE'S       MARYLAND                20770                 76000\n6   SAN FRANCISCO     CALIFORNIA                94103                202442\n  WAGE_RATE_OF_PAY_TO WAGE_UNIT_OF_PAY PREVAILING_WAGE PW_UNIT_OF_PAY\n1                  NA             Year           46821           Year\n2               77700             Year           77605           Year\n3               77700             Year           65458           Year\n4               77700             Year           65458           Year\n5                  NA             Year           75712           Year\n6                  NA             Year          168958           Year\n  PW_TRACKING_NUMBER PW_WAGE_LEVEL          PW_OES_YEAR PW_OTHER_SOURCE\n1               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n2               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n3               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n4               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n5               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n6               <NA>            IV 7/1/2019 - 6/30/2020            <NA>\n  PW_OTHER_YEAR PW_SURVEY_PUBLISHER PW_SURVEY_NAME APPX_A_NO_OF_EXEMPT_WORKERS\n1            NA                <NA>           <NA>                          NA\n2            NA                <NA>           <NA>                          NA\n3            NA                <NA>           <NA>                          NA\n4            NA                <NA>           <NA>                          NA\n5            NA                <NA>           <NA>                          NA\n6            NA                <NA>           <NA>                          NA\n  APPX_A_NAME_OF_INSTITUTION APPX_A_FIELD_OF_STUDY APPX_A_DATE_OF_DEGREE\n1                       <NA>                  <NA>                  <NA>\n2                       <NA>                  <NA>                  <NA>\n3                       <NA>                  <NA>                  <NA>\n4                       <NA>                  <NA>                  <NA>\n5                       <NA>                  <NA>                  <NA>\n6                       <NA>                  <NA>                  <NA>\n```\n:::\n:::\n\n# Exploration Data Analysis\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# extract year from date\nfinal_df$YEAR_RECEIVED = as.integer(substr(final_df$RECEIVED_DATE, 1, 4))\nfinal_df$MONTH_RECEIVED = month(final_df$RECEIVED_DATE)\nfinal_df$DAY_RECEIVED = day(final_df$RECEIVED_DATE)\n```\n:::\n\nLet's do the same for the remainder date columns\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfinal_df$YEAR_END = as.integer(substr(final_df$END_DATE, 1, 4))\nfinal_df$MONTH_END = month(final_df$END_DATE)\nfinal_df$DAY_END = day(final_df$END_DATE)\n\nfinal_df$YEAR_DECISION = as.integer(substr(final_df$DECISION_DATE, 1, 4))\nfinal_df$MONTH_DECISION = month(final_df$DECISION_DATE)\nfinal_df$DAY_DECISION = day(final_df$DECISION_DATE)\n\n\nfinal_df$YEAR_BEGIN = as.integer(substr(final_df$BEGIN_DATE, 1, 4))\nfinal_df$MONTH_BEGIN = month(final_df$BEGIN_DATE)\nfinal_df$DAY_BEGIN = day(final_df$BEGIN_DATE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(final_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n         CASE_NUMBER           CASE_STATUS RECEIVED_DATE DECISION_DATE\n1 I-200-19297-106681 Certified - Withdrawn    2019-10-24    2023-11-01\n2 I-200-19319-148860 Certified - Withdrawn    2019-11-15    2023-10-20\n3 I-200-19319-148860 Certified - Withdrawn    2019-11-15    2023-10-20\n4 I-200-19319-148860 Certified - Withdrawn    2019-11-15    2023-10-20\n5 I-200-19319-149308 Certified - Withdrawn    2019-11-15    2023-10-05\n6 I-200-19323-154281 Certified - Withdrawn    2019-11-19    2023-10-02\n  VISA_CLASS                JOB_TITLE FULL_TIME_POSITION BEGIN_DATE   END_DATE\n1       H-1B     Research Scientist I                  Y 2019-10-24 2022-10-23\n2       H-1B       Software Developer                  Y 2019-12-01 2022-11-30\n3       H-1B       Software Developer                  Y 2019-12-01 2022-11-30\n4       H-1B       Software Developer                  Y 2019-12-01 2022-11-30\n5       H-1B       Software Developer                  Y 2019-11-18 2022-11-17\n6       H-1B SENIOR SOFTWARE ENGINEER                  Y 2020-05-16 2023-05-15\n                       EMPLOYER_NAME EMPLOYER_STATE AGENT_REPRESENTING_EMPLOYER\n1    Georgia Institute of Technology             GA                          No\n2                     TRISHULLA, LLC             WI                         Yes\n3                     TRISHULLA, LLC             WI                         Yes\n4                     TRISHULLA, LLC             WI                         Yes\n5 INTERNATIONAL SOFTWARE SYSTEMS INC             MD                          No\n6            UBER TECHNOLOGIES, INC.             CA                         Yes\n  WORKSITE_WORKERS SECONDARY_ENTITY SECONDARY_ENTITY_BUSINESS_NAME\n1                1                N                           <NA>\n2                1                Y           Acuity Eyecare Group\n3                1                N                           <NA>\n4                1                N                           <NA>\n5                1                N                           <NA>\n6                1                N                           <NA>\n                     WORKSITE_ADDRESS1 WORKSITE_ADDRESS2 WORKSITE_CITY\n1                      313 Ferst Drive              <NA>       Atlanta\n2 4835 Lyndon B Johnson Fwy, Suite 850              <NA>        Dallas\n3       6629 UNIVERSITY AVE, SUITE 210              <NA>     MIDDLETON\n4       8383 Greenway Blvd., Suite 600              <NA>     Middleton\n5                 7337 Hanover Parkway           Suite A     Greenbelt\n6                   1455 MARKET STREET         4TH FLOOR SAN FRANCISCO\n  WORKSITE_COUNTY WORKSITE_STATE WORKSITE_POSTAL_CODE WAGE_RATE_OF_PAY_FROM\n1          FULTON        GEORGIA                30332                 52100\n2          DALLAS          TEXAS                75244                 77605\n3            DANE      WISCONSIN                53562                 77605\n4            DANE      WISCONSIN                53562                 77605\n5 PRINCE GEORGE'S       MARYLAND                20770                 76000\n6   SAN FRANCISCO     CALIFORNIA                94103                202442\n  WAGE_RATE_OF_PAY_TO WAGE_UNIT_OF_PAY PREVAILING_WAGE PW_UNIT_OF_PAY\n1                  NA             Year           46821           Year\n2               77700             Year           77605           Year\n3               77700             Year           65458           Year\n4               77700             Year           65458           Year\n5                  NA             Year           75712           Year\n6                  NA             Year          168958           Year\n  PW_TRACKING_NUMBER PW_WAGE_LEVEL          PW_OES_YEAR PW_OTHER_SOURCE\n1               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n2               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n3               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n4               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n5               <NA>             I 7/1/2019 - 6/30/2020            <NA>\n6               <NA>            IV 7/1/2019 - 6/30/2020            <NA>\n  PW_OTHER_YEAR PW_SURVEY_PUBLISHER PW_SURVEY_NAME APPX_A_NO_OF_EXEMPT_WORKERS\n1            NA                <NA>           <NA>                          NA\n2            NA                <NA>           <NA>                          NA\n3            NA                <NA>           <NA>                          NA\n4            NA                <NA>           <NA>                          NA\n5            NA                <NA>           <NA>                          NA\n6            NA                <NA>           <NA>                          NA\n  APPX_A_NAME_OF_INSTITUTION APPX_A_FIELD_OF_STUDY APPX_A_DATE_OF_DEGREE\n1                       <NA>                  <NA>                  <NA>\n2                       <NA>                  <NA>                  <NA>\n3                       <NA>                  <NA>                  <NA>\n4                       <NA>                  <NA>                  <NA>\n5                       <NA>                  <NA>                  <NA>\n6                       <NA>                  <NA>                  <NA>\n  YEAR_RECEIVED MONTH_RECEIVED DAY_RECEIVED YEAR_END MONTH_END DAY_END\n1          2019             10           24     2022        10      23\n2          2019             11           15     2022        11      30\n3          2019             11           15     2022        11      30\n4          2019             11           15     2022        11      30\n5          2019             11           15     2022        11      17\n6          2019             11           19     2023         5      15\n  YEAR_DECISION MONTH_DECISION DAY_DECISION YEAR_BEGIN MONTH_BEGIN DAY_BEGIN\n1          2023             11            1       2019          10        24\n2          2023             10           20       2019          12         1\n3          2023             10           20       2019          12         1\n4          2023             10           20       2019          12         1\n5          2023             10            5       2019          11        18\n6          2023             10            2       2020           5        16\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(final_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"CASE_NUMBER\"                    \"CASE_STATUS\"                   \n [3] \"RECEIVED_DATE\"                  \"DECISION_DATE\"                 \n [5] \"VISA_CLASS\"                     \"JOB_TITLE\"                     \n [7] \"FULL_TIME_POSITION\"             \"BEGIN_DATE\"                    \n [9] \"END_DATE\"                       \"EMPLOYER_NAME\"                 \n[11] \"EMPLOYER_STATE\"                 \"AGENT_REPRESENTING_EMPLOYER\"   \n[13] \"WORKSITE_WORKERS\"               \"SECONDARY_ENTITY\"              \n[15] \"SECONDARY_ENTITY_BUSINESS_NAME\" \"WORKSITE_ADDRESS1\"             \n[17] \"WORKSITE_ADDRESS2\"              \"WORKSITE_CITY\"                 \n[19] \"WORKSITE_COUNTY\"                \"WORKSITE_STATE\"                \n[21] \"WORKSITE_POSTAL_CODE\"           \"WAGE_RATE_OF_PAY_FROM\"         \n[23] \"WAGE_RATE_OF_PAY_TO\"            \"WAGE_UNIT_OF_PAY\"              \n[25] \"PREVAILING_WAGE\"                \"PW_UNIT_OF_PAY\"                \n[27] \"PW_TRACKING_NUMBER\"             \"PW_WAGE_LEVEL\"                 \n[29] \"PW_OES_YEAR\"                    \"PW_OTHER_SOURCE\"               \n[31] \"PW_OTHER_YEAR\"                  \"PW_SURVEY_PUBLISHER\"           \n[33] \"PW_SURVEY_NAME\"                 \"APPX_A_NO_OF_EXEMPT_WORKERS\"   \n[35] \"APPX_A_NAME_OF_INSTITUTION\"     \"APPX_A_FIELD_OF_STUDY\"         \n[37] \"APPX_A_DATE_OF_DEGREE\"          \"YEAR_RECEIVED\"                 \n[39] \"MONTH_RECEIVED\"                 \"DAY_RECEIVED\"                  \n[41] \"YEAR_END\"                       \"MONTH_END\"                     \n[43] \"DAY_END\"                        \"YEAR_DECISION\"                 \n[45] \"MONTH_DECISION\"                 \"DAY_DECISION\"                  \n[47] \"YEAR_BEGIN\"                     \"MONTH_BEGIN\"                   \n[49] \"DAY_BEGIN\"                     \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# let's check missing values\nprint(colSums(is.na(final_df)))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                   CASE_NUMBER                    CASE_STATUS \n                             0                              0 \n                 RECEIVED_DATE                  DECISION_DATE \n                             0                              0 \n                    VISA_CLASS                      JOB_TITLE \n                             0                              0 \n            FULL_TIME_POSITION                     BEGIN_DATE \n                             0                              0 \n                      END_DATE                  EMPLOYER_NAME \n                             0                              0 \n                EMPLOYER_STATE    AGENT_REPRESENTING_EMPLOYER \n                            30                              0 \n              WORKSITE_WORKERS               SECONDARY_ENTITY \n                             0                              0 \nSECONDARY_ENTITY_BUSINESS_NAME              WORKSITE_ADDRESS1 \n                        119355                              0 \n             WORKSITE_ADDRESS2                  WORKSITE_CITY \n                        100154                              0 \n               WORKSITE_COUNTY                 WORKSITE_STATE \n                            38                              0 \n          WORKSITE_POSTAL_CODE          WAGE_RATE_OF_PAY_FROM \n                           588                              0 \n           WAGE_RATE_OF_PAY_TO               WAGE_UNIT_OF_PAY \n                        101101                              0 \n               PREVAILING_WAGE                 PW_UNIT_OF_PAY \n                             0                              0 \n            PW_TRACKING_NUMBER                  PW_WAGE_LEVEL \n                        149453                          10947 \n                   PW_OES_YEAR                PW_OTHER_SOURCE \n                         10947                         138906 \n                 PW_OTHER_YEAR            PW_SURVEY_PUBLISHER \n                        138906                         140499 \n                PW_SURVEY_NAME    APPX_A_NO_OF_EXEMPT_WORKERS \n                        140499                         149535 \n    APPX_A_NAME_OF_INSTITUTION          APPX_A_FIELD_OF_STUDY \n                        149535                         149535 \n         APPX_A_DATE_OF_DEGREE                  YEAR_RECEIVED \n                        149535                              0 \n                MONTH_RECEIVED                   DAY_RECEIVED \n                             0                              0 \n                      YEAR_END                      MONTH_END \n                             0                              0 \n                       DAY_END                  YEAR_DECISION \n                             0                              0 \n                MONTH_DECISION                   DAY_DECISION \n                             0                              0 \n                    YEAR_BEGIN                    MONTH_BEGIN \n                             0                              0 \n                     DAY_BEGIN \n                             0 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(final_df[\"FULL_TIME_POSITION\"])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    FULL_TIME_POSITION\n1                    Y\n386                  N\n```\n:::\n:::\n\n\n### Employment Trends\nWhat are some most common jobs titles, industries, or the duration of employment contracts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# filter the dataset which jobs have most frequency and applicant get full time position\nfiltered_data <- final_df |>\n  filter(FULL_TIME_POSITION == \"Y\") |>\n  count(JOB_TITLE, sort = TRUE) |>\n  top_n(5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSelecting by n\n```\n:::\n\n```{.r .cell-code}\nprint(filtered_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                 JOB_TITLE    n\n1        Software Engineer 8481\n2       Software Developer 5442\n3 Senior Software Engineer 2260\n4       SOFTWARE DEVELOPER 1723\n5      Assistant Professor 1183\n```\n:::\n:::\n\nThis is the most frequent job titles appear in the dataset. From this result, we can see that tech related jobs are still the highest percentage of strong hire in United States.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# filter the dataset which jobs have most frequency and applicant get full time position\nfiltered_data <- final_df |>\n  count(EMPLOYER_NAME, sort = TRUE) |>\n  top_n(5)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nSelecting by n\n```\n:::\n\n```{.r .cell-code}\nprint(filtered_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                           EMPLOYER_NAME    n\n1                Amazon.com Services LLC 3259\n2                 Ernst & Young U.S. LLP 2610\n3                             Google LLC 2325\n4                  Microsoft Corporation 2190\n5 COGNIZANT TECHNOLOGY SOLUTIONS US CORP 1639\n```\n:::\n:::\n\nBig companies has always mass hire workers since they have more budget. It is no surprise to see Amazon to be at top.\n\n\ncase status \n\n::: {.cell}\n\n```{.r .cell-code}\ncase_df <- final_df %>%\n  count(CASE_STATUS) %>%\n  mutate(percent = n / sum(n) * 100)\n\nggplot(case_df, aes(x = CASE_STATUS, y = percent, fill = CASE_STATUS)) +\n  geom_col() +\n  geom_text(aes(label = sprintf(\"%.1f%%\", percent)), position = position_stack(vjust = 0.5), hjust = 1) +\n  labs(fill = \"Case Status\", title = \"Distribution of CASE_STATUS\")\n```\n\n::: {.cell-output-display}\n![](blogpost5_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\nLooking at the plot, it might not be suitable to build a classifier to predict labels since it is high imbalance.\nWhat does each label mean?\n\nWhen application is certified, it allows the employer to proceed with next steps of the visa process, which include petitioning U.S. Citizenship and Immigration Services (USCIS) for a visa on behalf of the foreign worker.\n\nWe also notice a 9% certified - withdrawn. In other word, this is saying the application is approved but employer chose to withdraw it before foreign worker began employment. This can happen due to several reason.\n\nCompany's budget cut\n\ncandidate issues - candidate might accepted job offers elsewhere\n\nNext, we will observe fulltime position.\n\n::: {.cell}\n\n```{.r .cell-code}\ncase_df <- final_df %>%\n  count(FULL_TIME_POSITION) %>%\n  mutate(percent = n / sum(n) * 100)\n\nggplot(case_df, aes(x = FULL_TIME_POSITION, y = percent, fill = FULL_TIME_POSITION)) +\n  geom_col() +\n  geom_text(aes(label = sprintf(\"%.1f%%\", percent)), position = position_stack(vjust = 0.5), hjust = 1) +\n  labs(fill = \"FULL_TIME_POSITION\", title = \"Distribution of FULL_TIME_POSITION\")\n```\n\n::: {.cell-output-display}\n![](blogpost5_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\nAgain, we see that highly imbalance target labels. Remember that employers who are seeking to hire foreign workers must submit various forms of applications. Those candidates who received full time positions from employers are considered strong candidates which is why employers are willing to submit applications to OFLC.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Identify states with high number of applicants or high approval rates\nstate_df <- final_df\n\nstate_df <- na.omit(state_df[c(\"EMPLOYER_STATE\", \"CASE_STATUS\")])\n\nstate_data <- state_df |>\n  group_by(EMPLOYER_STATE) |>\n  summarise(\n    Total_Applications = n(),\n    Approved_Applications = sum(CASE_STATUS == \"Approved\")\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sort by total applications\nstate_data_sorted_applicants <- state_data %>%\n  arrange(desc(Total_Applications))\n\ntop_states <- state_data_sorted_applicants |>\n  top_n(20, Total_Applications)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# visualizing\n\n# Plot for Total Applications\nggplot(top_states, aes(x = reorder(EMPLOYER_STATE, -Total_Applications), y = Total_Applications)) +\n  geom_bar(stat = \"identity\", fill = \"GREY\") +\n  theme(axis.text.y = element_text(size = 6)) +  # Smaller text size for states\n  labs(title = \"Total Visa Applications by State\", x = \"State\", y = \"Number of Applications\") +\n  coord_flip()  # Flips the coordinates to make labels readable\n```\n\n::: {.cell-output-display}\n![](blogpost5_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\nTop 20 states where received the highest number of applications. Now you know what states to look for jobs.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mydata=PERM_Disclosure_Data_FY2018_EOY\n# Set seed for reproducibility\n# set.seed(123)\n\n# Sample 1% of the data\n# mydata <- mydata[sample(nrow(mydata), size = 0.01 * nrow(mydata)), ]\n\n# status_counts <- mydata %>% count(CASE_STATUS)\n# ggplot(status_counts, aes(x = \"\", y = n, fill = CASE_STATUS)) +\n    # geom_bar(width = 1, stat = \"identity\") +\n    # coord_polar(theta = \"y\") +\n    # theme_void() +\n    # labs(fill = \"Case Status\", title = \"Distribution of CASE_STATUS\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# lm_result <- lm(data_dif ~ PW_AMOUNT_9089, data = mydata)\n# summary(lm_result)\n```\n:::\n\n\n### Clustering Analysis\nWe can make use of various clustering techniques to group similar applicants together.\n\n::: {.cell}\n\n```{.r .cell-code}\nfiltered_df <- final_df %>%\n  # filter(JOB_TITLE %in% c(\"Software Engineer\", \"Assistant Professor\", \"Business Analyst\", \"Machine Learning Engineer\"),\n  # FULL_TIME_POSITION %in% c(\"Y\", \"N\")) %>%\n  select(WAGE_RATE_OF_PAY_FROM, PREVAILING_WAGE)\n\nhead(filtered_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  WAGE_RATE_OF_PAY_FROM PREVAILING_WAGE\n1                 52100           46821\n2                 77605           77605\n3                 77605           65458\n4                 77605           65458\n5                 76000           75712\n6                202442          168958\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# create recipe\nrec <- recipe(~ ., data=filtered_df) |>\n  step_dummy(all_nominal()) |>\n  prep()\n\ncluster_data <- bake(rec, new_data=NULL)\n\n# perform clustering\nset.seed(42)\nk <- 5\nclustered_result <- kmeans(cluster_data, centers=k)\n\n# visualize cluster\nfiltered_df$cluster <- factor(clustered_result$cluster)\nhead(filtered_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  WAGE_RATE_OF_PAY_FROM PREVAILING_WAGE cluster\n1                 52100           46821       3\n2                 77605           77605       3\n3                 77605           65458       3\n4                 77605           65458       3\n5                 76000           75712       3\n6                202442          168958       4\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(filtered_df, aes(x = WAGE_RATE_OF_PAY_FROM, y = PREVAILING_WAGE)) +\n  geom_point(aes(color = cluster)) +\n  # facet_wrap(~ cluster) +\n  theme_minimal() +\n  labs(title = \"Wage Rate vs. Prevailing Wage by Cluster\") +\n  scale_x_log10() +\n  scale_y_log10()\n```\n\n::: {.cell-output-display}\n![](blogpost5_files/figure-html/unnamed-chunk-28-1.png){width=672}\n:::\n:::\n\n\n# Observation and Limitation\n\nWAGE_RATE_OF_PAY_FROM is the minimum wage pay at the worksite, \n\nPREVAILING_WAGE is the average wage paid to similar employed workers in the field\n\nLooking at the result of KMeans with only two numerical columns, it was not necessary to make use of Kmeans because is obvious to notice a linear relationship. There's a positive correlation between these two features. It is expected that employers are pay more at the worksite than prevailng wages.\n\nFor example, applicants who are highly specialized / high demand positions mostly lie in cluster 4. \n\nTo recall, one limitation of this KMeans is the choice of cluster, k, and limited numerical columns to work with. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyearly_wage <- final_df %>%\n  group_by(YEAR_BEGIN) %>%\n  summarise(Avg_Prevailing_Wage = mean(PREVAILING_WAGE, na.rm = TRUE))\n\nggplot(yearly_wage, aes(x = YEAR_BEGIN, y = Avg_Prevailing_Wage)) +\n  geom_line() +  # Use a line plot to show trends over time\n  geom_point() +  # Add points to highlight each year's average wage\n  labs(title = \"Average Prevailing Wage Per Year\",\n       x = \"Year\",\n       y = \"Average Prevailing Wage\") \n```\n\n::: {.cell-output-display}\n![](blogpost5_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\nwe see a sharp drop in year 2021 due to COVID-19. \n\n\n# What's Next\n\n### Build on Logistic Regression\nThis time with more features/columns, we can build a better logistic regression model to predict approved or denial\n\n### Linear Regression on income\n",
    "supporting": [
      "blogpost5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}