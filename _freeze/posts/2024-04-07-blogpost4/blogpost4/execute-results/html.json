{
  "hash": "4503e3dfa9eaadeae6fb6097836f58d5",
  "result": {
    "markdown": "---\ntitle: \"blog-post-4\"\nauthor: \"team3\"\ndescription:  |\n  This post details blog-post-4\ndate: \"2024-04-07\"\ndate-modified: \"2024-04-07\"\ndraft: FALSE\n---\n\n\n## packages used\nreadxl\n\n\n\n## Continuation work\nIn blog posts 2 and 3, we uncovered a noticeable trend in our second dataset. We analyzed the H1B visa approval rates across different countries by extracting data from an Excel file. One key finding was that Asian countries have the highest H1B approval counts compared to other regions. This discovery led us to delve deeper into understanding the reasons behind this trend and to explore the interconnections with other variables.\n\nHowever, we faced a challenge with the second dataset as it limited our ability to gain deeper insights or construct statistical models. To overcome this and enrich our analysis, we decided to integrate additional datasets from blog post 1. This integration aims to provide a more comprehensive view and enable a better exploration of the underlying factors influencing the H1B approval trends.\n\n## Dataset 1\nFor our first dataset, we have the following columns\n\nFiscal Year: The fiscal year of the H-1B application.\n\nEmployer: The name of the employer applying for the H-1B visa.\n\nInitial Approval: The number of initial H-1B applications approved.\n\nInitial Denial: The number of initial H-1B applications denied.\n\nContinuing Approval: The number of continuing H-1B applications approved.\n\nContinuing Denial: The number of continuing H-1B applications denied.\n\nNAICS: The North American Industry Classification System code.\n\nTax ID: The Tax Identification Number of the employer.\n\nState: The state where the employer is located.\n\nCity: The city where the employer is located.\n\nZIP: The ZIP code where the employer is located\n\nWith this dataset, it seems like we can calculate approval and denial rates by employer. We also wonder of the possibility to predict approval/denial with logistic regression. However, we think that the features/columns in this dataset do not represent importances to help classify approval or denial.\n\n## Dataset 3\nWith this dataset, it seems like we have a lot of features to explore. However, we can filter columns that contribute to the predicator variable we care about. Specifically, we will explore the most recent year dataset if we want to build statistical model on it. It does not make sense to build a statistical model on year 2010 and use it to explain current year since data distribution is not the same. For this blog post, we decide to start on the year 2024 first to do our exploration and initial modeling. Note that modeling is an iterative process.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readxl)\nlibrary(readr)\n```\n:::\n\n\n### Initial thought\nLooking at this dataset, we want to filter out columns and explore relationships in dataset. Because the original dataset exceeds the limit for Github store without Git LFS, we will saved the cleaned and fewer columns dataset.\n\nColumns to consider\n\ncase_number\n\ncase_status\n\nreceived_date/decision_date\n\nVisa-class: Focus only H1B\n\nJob_title\n\nfulltime_position\n\nbegin_date/end_date\n\nnew_employment\n\ncontinued_employment\n\nemployer name: company name\n\nemployer state\n\nAgent_representing_employer\n\njoin with additional dataset with more columns: \n\nprevailing wage and name of study/colleges\n\nWe decide to look into these columns since we think that these are high feature importances in terms of making predictive model. Also, we have a hypothesis that a good agent(lawyer) can also increase acceptance of H1B.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\ndf <- readRDS(\"dataset/cleaned_disclosure.rds\")\nprint(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 101,179 × 12\n   CASE_NUMBER    CASE_STATUS RECEIVED_DATE       DECISION_DATE       VISA_CLASS\n   <chr>          <chr>       <dttm>              <dttm>              <chr>     \n 1 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n 2 I-203-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 E-3 Austr…\n 3 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n 4 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n 5 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n 6 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n 7 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n 8 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n 9 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n10 I-200-23355-5… Certified   2023-12-21 00:00:00 2023-12-29 00:00:00 H-1B      \n# ℹ 101,169 more rows\n# ℹ 7 more variables: JOB_TITLE <chr>, FULL_TIME_POSITION <chr>,\n#   BEGIN_DATE <dttm>, END_DATE <dttm>, EMPLOYER_NAME <chr>,\n#   EMPLOYER_STATE <chr>, AGENT_REPRESENTING_EMPLOYER <chr>\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_df <- df |>\n  filter(\n    VISA_CLASS %in% c(\n      \"H-1B\"\n    )\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_df$FULL_TIME_POSITION <- factor(new_df$FULL_TIME_POSITION)\n\nnew_df$AGENT_REPRESENTING_EMPLOYER <- factor(new_df$AGENT_REPRESENTING_EMPLOYER)\nmylogit <- glm(FULL_TIME_POSITION ~ AGENT_REPRESENTING_EMPLOYER, data = new_df, family = \"binomial\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mylogit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = FULL_TIME_POSITION ~ AGENT_REPRESENTING_EMPLOYER, \n    family = \"binomial\", data = new_df)\n\nCoefficients:\n                               Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                     4.27569    0.05054  84.606  < 2e-16 ***\nAGENT_REPRESENTING_EMPLOYERYes -0.44945    0.05702  -7.883  3.2e-15 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 18444  on 97692  degrees of freedom\nResidual deviance: 18377  on 97691  degrees of freedom\nAIC: 18381\n\nNumber of Fisher Scoring iterations: 7\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# model 2\nnew_df$FULL_TIME_POSITION <- factor(new_df$FULL_TIME_POSITION)\n\nnew_df$AGENT_REPRESENTING_EMPLOYER <- factor(new_df$AGENT_REPRESENTING_EMPLOYER)\nnew_df$EMPLOYER_STATE <- factor(new_df$EMPLOYER_STATE)\nmylogit <- glm(FULL_TIME_POSITION ~ AGENT_REPRESENTING_EMPLOYER+EMPLOYER_STATE, data = new_df, family = \"binomial\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(mylogit)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nglm(formula = FULL_TIME_POSITION ~ AGENT_REPRESENTING_EMPLOYER + \n    EMPLOYER_STATE, family = \"binomial\", data = new_df)\n\nCoefficients:\n                                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                       4.14039    0.71619   5.781 7.42e-09 ***\nAGENT_REPRESENTING_EMPLOYERYes   -0.19105    0.06156  -3.103  0.00191 ** \nEMPLOYER_STATEAL                 -1.85110    0.74385  -2.489  0.01283 *  \nEMPLOYER_STATEAR                  0.53670    0.79745   0.673  0.50094    \nEMPLOYER_STATEAZ                  0.13182    0.76300   0.173  0.86284    \nEMPLOYER_STATECA                  0.02224    0.71596   0.031  0.97522    \nEMPLOYER_STATECO                 -0.20357    0.76701  -0.265  0.79069    \nEMPLOYER_STATECT                 -0.28111    0.75499  -0.372  0.70965    \nEMPLOYER_STATEDC                  0.13100    0.84432   0.155  0.87670    \nEMPLOYER_STATEDE                 -0.30400    0.77640  -0.392  0.69539    \nEMPLOYER_STATEFL                 -0.57434    0.72425  -0.793  0.42777    \nEMPLOYER_STATEFM                 11.42568 1029.12171   0.011  0.99114    \nEMPLOYER_STATEGA                 -0.66283    0.72117  -0.919  0.35805    \nEMPLOYER_STATEGU                 11.53518  121.21811   0.095  0.92419    \nEMPLOYER_STATEHI                 -0.57196    1.24162  -0.461  0.64505    \nEMPLOYER_STATEIA                 -0.78786    0.76794  -1.026  0.30492    \nEMPLOYER_STATEID                 -0.52818    0.92393  -0.572  0.56755    \nEMPLOYER_STATEIL                  0.24894    0.72454   0.344  0.73116    \nEMPLOYER_STATEIN                 -0.09901    0.77619  -0.128  0.89850    \nEMPLOYER_STATEKS                 -0.95367    0.77264  -1.234  0.21709    \nEMPLOYER_STATEKY                  0.38863    0.92048   0.422  0.67288    \nEMPLOYER_STATELA                 -0.83444    0.79088  -1.055  0.29139    \nEMPLOYER_STATEMA                 -0.78057    0.71859  -1.086  0.27737    \nEMPLOYER_STATEMD                  0.62599    0.74275   0.843  0.39934    \nEMPLOYER_STATEME                 -0.81796    0.87756  -0.932  0.35129    \nEMPLOYER_STATEMI                 -0.33243    0.72313  -0.460  0.64572    \nEMPLOYER_STATEMN                 -0.30756    0.73904  -0.416  0.67729    \nEMPLOYER_STATEMO                  0.53091    0.77557   0.685  0.49363    \nEMPLOYER_STATEMP                 -1.12560    1.25132  -0.900  0.36837    \nEMPLOYER_STATEMS                 -0.83378    0.92580  -0.901  0.36780    \nEMPLOYER_STATEMT                 11.60222  239.22940   0.048  0.96132    \nEMPLOYER_STATENC                  1.22779    0.76610   1.603  0.10901    \nEMPLOYER_STATEND                  0.37102    1.23386   0.301  0.76364    \nEMPLOYER_STATENE                  2.78154    1.00639   2.764  0.00571 ** \nEMPLOYER_STATENH                 -0.61786    0.87649  -0.705  0.48086    \nEMPLOYER_STATENJ                  0.54768    0.72064   0.760  0.44726    \nEMPLOYER_STATENM                  0.94555    1.23160   0.768  0.44264    \nEMPLOYER_STATENV                 -0.22182    0.87489  -0.254  0.79985    \nEMPLOYER_STATENY                 -0.81520    0.71667  -1.137  0.25534    \nEMPLOYER_STATEOH                 -0.37167    0.73214  -0.508  0.61170    \nEMPLOYER_STATEOK                  0.37214    0.79875   0.466  0.64128    \nEMPLOYER_STATEOR                 -0.72523    0.78334  -0.926  0.35454    \nEMPLOYER_STATEPA                  0.19855    0.72852   0.273  0.78520    \nEMPLOYER_STATEPR                 11.57417  352.84919   0.033  0.97383    \nEMPLOYER_STATERI                  0.22732    0.84415   0.269  0.78771    \nEMPLOYER_STATESC                 -0.53251    0.79013  -0.674  0.50034    \nEMPLOYER_STATESD                 -2.01863    0.79765  -2.531  0.01138 *  \nEMPLOYER_STATETN                 -0.08546    0.74711  -0.114  0.90893    \nEMPLOYER_STATETX                  0.21922    0.71860   0.305  0.76032    \nEMPLOYER_STATEUT                  0.12953    0.84435   0.153  0.87807    \nEMPLOYER_STATEVA                 -0.24928    0.72214  -0.345  0.72994    \nEMPLOYER_STATEVI                 11.52463  727.28733   0.016  0.98736    \nEMPLOYER_STATEVT                  0.61491    0.87447   0.703  0.48194    \nEMPLOYER_STATEWA                  1.17962    0.73693   1.601  0.10944    \nEMPLOYER_STATEWI                  0.10976    0.77589   0.141  0.88751    \nEMPLOYER_STATEWV                 -2.07776    0.89213  -2.329  0.01986 *  \nEMPLOYER_STATEWY                 -1.83357    0.83402  -2.198  0.02791 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 18443  on 97679  degrees of freedom\nResidual deviance: 17775  on 97623  degrees of freedom\n  (13 observations deleted due to missingness)\nAIC: 17889\n\nNumber of Fisher Scoring iterations: 14\n```\n:::\n:::\n\nFor AGENT_REPRESENTING_EMPLOYERYes, the coefficient is -0.19105, indicating that when the agent is representing the employer, the log-odds of having a full-time position (\"Y\") decrease compared to when the agent is not representing (the baseline). This contradicts to our assumption that having a good lawyer increases the chance of H1B approval. Perhaps, it is worth investigate further.\n\nFor state, MA(Massachusetts) and NY(New York) have a similiar coefficient, that is, negative effect on the likelihood of getting full-time position.\n\nOverall, we can see that there exist features in dataset that  contribute to whether likely to being offer fulltime position or not. If possible, we can join the remaining two datasets with **case number** which gives us more features to work on.\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}